'use strict';var _react=require('react'),_react2=_interopRequireDefault(_react),_enzyme=require('enzyme'),_formElementUtils=require('../../../main/forms/formElement/formElementUtils');function _interopRequireDefault(a){return a&&a.__esModule?a:{default:a}}describe('FormElementUtils',function(){describe('getFormInputType',function(){describe('Returns the input type, tested elements include text, number, email, password\n        number, checkbox, radio. Other input elements like hidden, date, week etc. are not tested.\n      ',function(){var a=function(a){return _react2.default.createElement('input',{type:a})};it('SHOULD return default for unknown types (text, number, email, etc.)',function(){var b=(0,_enzyme.shallow)(a('text')).prop('type'),c=(0,_enzyme.shallow)(a('email')).prop('type'),d=(0,_enzyme.shallow)(a('password')).prop('type'),e=(0,_enzyme.shallow)(a('number')).prop('type');expect((0,_formElementUtils.getFormInputType)(b)).toBe('default'),expect((0,_formElementUtils.getFormInputType)(c)).toBe('default'),expect((0,_formElementUtils.getFormInputType)(d)).toBe('default'),expect((0,_formElementUtils.getFormInputType)(e)).toBe('default')}),it('SHOULD return checkbox if the input type is checkbox',function(){var b=(0,_enzyme.shallow)(a('checkbox')).prop('type');expect((0,_formElementUtils.getFormInputType)(b)).toBe('checkbox')}),it('SHOULD return radio if the input type is radio',function(){var b=(0,_enzyme.shallow)(a('radio')).prop('type');expect((0,_formElementUtils.getFormInputType)(b)).toBe('radio')})})}),describe('getFormElementType',function(){describe('Returns the React element type and filters form elements like select, textarea and input.\n      Other possible form element types are not considered until use case arises.\n      ',function(){it('SHOULD return select for select elements',function(){expect((0,_formElementUtils.getFormElementType)(_react2.default.createElement('select',null))).toBe('select')}),it('SHOULD return default for textarea',function(){expect((0,_formElementUtils.getFormElementType)(_react2.default.createElement('textarea',null))).toBe('default')}),it('SHOULD return default for regular input elements',function(){expect((0,_formElementUtils.getFormElementType)(_react2.default.createElement('input',null))).toBe('default')}),it('SHOULD return radio for radio input elements',function(){expect((0,_formElementUtils.getFormElementType)(_react2.default.createElement('input',{type:'radio'}))).toBe('radio')}),it('SHOULD return checkbox for checkbox input elements',function(){expect((0,_formElementUtils.getFormElementType)(_react2.default.createElement('input',{type:'checkbox'}))).toBe('checkbox')})})}),describe('getFormElementRefName',function(){describe('Returns the ref name for form elements. Radio ref name is returned as (name + value)\n      WHY? since radio buttons have 1 name with multiple values, we need to identify which\n      value belongs to which name. This is not an issue with other form elements.\n      ',function(){it('SHOULD return the correct name for Radio',function(){expect((0,_formElementUtils.getFormElementRefName)(_react2.default.createElement('input',{type:'radio',name:'myName',value:'myVal'}))).toBe('myNamemyVal')}),it('\n        SHOULD return the correct name for Other form elements.\n        Assumption: each form element name is unique\n        ',function(){expect((0,_formElementUtils.getFormElementRefName)(_react2.default.createElement('select',{name:'mySelect'}))).toBe('mySelect')})})})});