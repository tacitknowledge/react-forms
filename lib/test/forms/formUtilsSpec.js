'use strict';var _react=require('react'),_react2=_interopRequireDefault(_react),_enzyme=require('enzyme'),_formUtils=require('../../main/forms/formUtils'),utils=_interopRequireWildcard(_formUtils),_formGroup=require('../../main/forms/formGroup'),_formGroup2=_interopRequireDefault(_formGroup);function _interopRequireWildcard(a){if(a&&a.__esModule)return a;var b={};if(null!=a)for(var c in a)Object.prototype.hasOwnProperty.call(a,c)&&(b[c]=a[c]);return b.default=a,b}function _interopRequireDefault(a){return a&&a.__esModule?a:{default:a}}describe('Form Utilities',function(){describe('isAReactEl',function(){it('SHOULD return true if this is a React element',function(){expect(utils.isAReactEl(_react2.default.createElement('input',null))).toBe(!0)}),it('SHOULD return false if this is NOT a React element',function(){expect(utils.isAReactEl(void 0)).toBe(!1)})}),describe('isAFormEl',function(){it('SHOULD return true if this is an input element',function(){expect(utils.isAFormEl(_react2.default.createElement('input',null))).toBe(!0)}),it('SHOULD return true if this is a textarea element',function(){expect(utils.isAFormEl(_react2.default.createElement('textarea',null))).toBe(!0)}),it('SHOULD return true if this is a select element',function(){expect(utils.isAFormEl(_react2.default.createElement('select',null))).toBe(!0)}),it('SHOULD return false if this is NOT a known form element',function(){expect(utils.isAFormEl(_react2.default.createElement('div',null))).toBe(!1)})}),describe('isAFormGroup',function(){it('SHOULD return true if this is a FormGroup element',function(){expect(utils.isAFormGroup(_react2.default.createElement(_formGroup2.default,null))).toBe(!0)}),it('SHOULD return false if this is NOT a FormGroup element',function(){expect(utils.isAFormGroup(_react2.default.createElement('div',null))).toBe(!1)})}),describe('getFormData',function(){describe('Transforms the input values from the DOM as a plain object',function(){var a,b,c,d;beforeEach(function(){c={firstName:{value:'john doe'},email:{value:'john@doe.com'},password:{value:'password123'},remember:{value:'not this',checked:!0},radioItemDelivery:{value:'delivery',checked:!1},radioItemCollection:{value:'collection',checked:!0},country:{value:'GB'},notes:{value:'This is a note.'}}}),beforeEach(function(){}),beforeEach(function(){b=(0,_enzyme.shallow)(_react2.default.createElement('div',null,_react2.default.createElement('input',{type:'text',name:'firstName'}),_react2.default.createElement('input',{type:'email',name:'email'}),_react2.default.createElement('input',{type:'password',name:'password'}),_react2.default.createElement('div',null,_react2.default.createElement('input',{type:'checkbox',name:'remember'})),_react2.default.createElement('input',{type:'radio',name:'radioItem',value:'Delivery'}),_react2.default.createElement('input',{type:'radio',name:'radioItem',value:'Collection'}),_react2.default.createElement('select',{name:'country'},_react2.default.createElement('option',{value:'None'},'Please Select'),_react2.default.createElement('option',{value:'GB'},'United Kingdom'),_react2.default.createElement('option',{value:'DE'},'Germany')),_react2.default.createElement('textarea',{name:'notes'})))}),beforeEach(function(){a=(0,_enzyme.shallow)(_react2.default.createElement('div',null,'some root level string that needs to be ignored',_react2.default.createElement('dummy',null),_react2.default.createElement('div',{id:'dummy'},'dummy'),_react2.default.createElement('button',null,'dummy button')))}),beforeEach(function(){d=utils.getFormData(b.prop('children'),c)}),it('SHOULD ignore NON form elements like - strings, divs, buttons, custom components',function(){var b=utils.getFormData(a.prop('children'),null);expect(b).toBeEmptyObject()}),it('SHOULD return values for regular inputs - text, email, password',function(){expect(d.firstName).toBe(c.firstName.value),expect(d.email).toBe(c.email.value),expect(d.password).toBe(c.password.value)}),it('SHOULD return values for checkbox input',function(){expect(d.remember).toBeBoolean(),expect(d.remember).toBe(c.remember.checked)}),it('SHOULD return values for radio input',function(){expect(d.radioItem).toBe(c.radioItemCollection.value)}),it('SHOULD return values for select list',function(){expect(d.country).toBe(c.country.value)}),it('SHOULD return values for textareas',function(){expect(d.notes).toBe(c.notes.value)})})}),describe('filterValidation',function(){var a={rules:{firstName:{required:!0},lastName:{required:!0},middleName:{required:!0},nickName:{required:!0}},messages:{firstName:{required:'Please enter your first name'},lastName:{required:'Please enter your last name'},middleName:{required:'Please enter your middle name'},nickName:{required:'Please enter your nick name'}}};it('SHOULD return only the rules and messages matching the given inputs',function(){var b=_react2.default.createElement('div',null,_react2.default.createElement('input',{name:'firstName'}),_react2.default.createElement('input',{name:'lastName'})),c=utils.filterValidation({children:b,validation:a});expect(c.rules).toHaveMember('firstName'),expect(c.messages).toHaveMember('lastName'),expect(c.rules).not.toHaveMember('nickName'),expect(c.messages).not.toHaveMember('middleName')}),it('SHOULD return only the rules and messages matching the given textarea',function(){var b=_react2.default.createElement('div',null,_react2.default.createElement('textarea',{name:'firstName',type:'text'}),_react2.default.createElement('textarea',{name:'lastName',type:'text'})),c=utils.filterValidation({children:b,validation:a});expect(c.rules).toHaveMember('firstName'),expect(c.messages).toHaveMember('lastName'),expect(c.rules).not.toHaveMember('nickName'),expect(c.messages).not.toHaveMember('middleName')}),it('SHOULD return only the rules and messages matching the given select',function(){var b=_react2.default.createElement('div',null,_react2.default.createElement('select',{name:'firstName'},_react2.default.createElement('option',null,'John')),_react2.default.createElement('select',{name:'lastName'},_react2.default.createElement('option',null,'Smith'))),c=utils.filterValidation({children:b,validation:a});expect(c.rules).toHaveMember('firstName'),expect(c.messages).toHaveMember('lastName'),expect(c.rules).not.toHaveMember('nickName'),expect(c.messages).not.toHaveMember('middleName')}),it('SHOULD return only the rules and messages matching the given radio and checkbox',function(){var b=_react2.default.createElement('div',null,_react2.default.createElement('input',{name:'firstName',type:'checkbox'}),_react2.default.createElement('input',{name:'lastName',type:'radio'})),c=utils.filterValidation({children:b,validation:a});expect(c.rules).toHaveMember('firstName'),expect(c.messages).toHaveMember('lastName'),expect(c.rules).not.toHaveMember('nickName'),expect(c.messages).not.toHaveMember('middleName')}),it('SHOULD return only the rules and messages matching the given nested form elements',function(){var b=_react2.default.createElement('div',null,_react2.default.createElement('div',null,_react2.default.createElement('div',null,_react2.default.createElement('div',null,_react2.default.createElement('div',null),'string text',_react2.default.createElement('input',{name:'firstName',type:'checkbox'}),_react2.default.createElement('input',{name:'lastName',type:'radio'}))))),c=utils.filterValidation({children:b,validation:a});expect(c.rules).toHaveMember('firstName'),expect(c.messages).toHaveMember('lastName'),expect(c.rules).not.toHaveMember('nickName'),expect(c.messages).not.toHaveMember('middleName')})}),describe('omitValidation',function(){var a,b;beforeEach(function(){b={rules:{firstName:{required:!0},lastName:{required:!0},line1:{required:!0}},messages:{firstName:{required:'Please enter your first name'},lastName:{required:'Please enter your last name'},line1:{required:'Please enter your Address'}}},a=utils.omitValidation(b,['firstName','lastName'])}),it('SHOULD return rules and messages members',function(){expect(a).toHaveMember('rules'),expect(a).toHaveMember('messages')}),it('SHOULD return picked rules',function(){expect(a.rules).toHaveMember('line1'),expect(a.rules.line1).toHaveMember('required')}),it('SHOULD return picked messages',function(){expect(a.messages).toHaveMember('line1'),expect(a.messages.line1).toHaveMember('required'),expect(a.messages.line1.required).toBe(b.messages.line1.required)}),it('SHOULD NOT return omitted rules',function(){expect(a.rules).not.toHaveMember('firstName'),expect(a.rules).not.toHaveMember('lastName')}),it('SHOULD NOT return omitted messages',function(){expect(a.messages).not.toHaveMember('firstName'),expect(a.messages).not.toHaveMember('lastName')})}),describe('replaceNullForEmptyString',function(){var a;beforeEach(function(){a={line1:'Something 1',line2:null}}),it('SHOULD return an object',function(){var b=utils.replaceNullForEmptyString(a);expect(b).toBeObject()}),it('SHOULD return the value if not null',function(){var b=utils.replaceNullForEmptyString(a);expect(b.line1).toBe(a.line1)}),it('SHOULD return null values as an empty string',function(){var b=utils.replaceNullForEmptyString(a);expect(b.line2).toBe('')})})});